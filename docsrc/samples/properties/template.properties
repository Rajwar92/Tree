
# ============================================================================ #
#
#   GENERATED PROPERTIES FILE FOR USE WITH THE DITA COMMAND
#
#   Lines in this file that start with a number sign '#' are comments.
#
#   To set a build parameter, remove the commenting '#' at the start of the line
#   and specify the value for the parameter after the '=' sign, for example,
#
#   args.filter = my-filter.ditaval
#
#   Use the `dita` command with the `--propertyfile` option to use the build
#   parameters specified in a properties file, for example:
#
#   dita --input=my.ditamap --format=html5 --propertyfile=my.properties
#
#   Build parameters in this file are grouped by transformation type.
#   Supported parameter values are listed in brackets [] after each description,
#   with an asterisk (*) indicating the default value where appropriate.
#
# ============================================================================ #


# ============================================================================ #
#                                   COMMON
# ============================================================================ #

# args.draft = no
#                     Specifies whether the content of <draft-comment> and 
#                     <required-cleanup> elements is included in the output.
#                     [ no ]*
#                     [ yes ]

# args.figurelink.style = NUMBER
#                     Specifies how cross references to figures are styled in 
#                     output.
#                     [ NUMBER ]
#                     [ NUMTITLE ]
#                     [ TITLE ]

# args.filter = 
#                     Specifies a filter file to be used to include, exclude, or 
#                     flag content.

# args.gen.task.lbl = YES
#                     Specifies whether to generate headings for sections within 
#                     task topics.
#                     [ NO ]
#                     [ YES ]

# args.grammar.cache = yes
#                     Specifies whether the grammar-caching feature of the XML 
#                     parser is used.
#                     [ no ]
#                     [ yes ]*

# args.input.dir = 
#                     Specifies the base directory for your documentation project.

# args.output.base = 
#                     Specifies the name of the output file without file 
#                     extension.

# args.rellinks = none
#                     Specifies which links to include in the output.
#                     [ all ] - All links are included.
#                     [ nofamily ] - Parent, ancestor, child, descendant, sibling, 
#                     next, previous, and cousin links are not included.
#                     [ none ] - No links are included.
#                     [ noparent ] - Ancestor and parent links are not included.

# args.resources = 
#                     Specifies resource files.

# args.tablelink.style = NUMBER
#                     Specifies how cross references to tables are styled.
#                     [ NUMBER ]
#                     [ NUMTITLE ]
#                     [ TITLE ]

# build-step.branch-filter = true
#                     Run process branch-filter
#                     [ false ]
#                     [ true ]*

# build-step.chunk = true
#                     Run process chunk
#                     [ false ]
#                     [ true ]*

# build-step.clean-preprocess = true
#                     Run process clean-preprocess
#                     [ false ]
#                     [ true ]*

# build-step.clean-temp = true
#                     Run process clean-temp
#                     [ false ]
#                     [ true ]*

# build-step.coderef = true
#                     Run process coderef
#                     [ false ]
#                     [ true ]*

# build-step.conref = true
#                     Run process conref
#                     [ false ]
#                     [ true ]*

# build-step.copy-flag = true
#                     Run process copy-flag
#                     [ false ]
#                     [ true ]*

# build-step.copy-html = true
#                     Run process copy-html
#                     [ false ]
#                     [ true ]*

# build-step.copy-image = true
#                     Run process copy-image
#                     [ false ]
#                     [ true ]*

# build-step.keyref = true
#                     Run process keyref
#                     [ false ]
#                     [ true ]*

# build-step.map-profile = true
#                     Run process map-profile
#                     [ false ]
#                     [ true ]*

# build-step.maplink = true
#                     Run process maplink
#                     [ false ]
#                     [ true ]*

# build-step.mapref = true
#                     Run process mapref
#                     [ false ]
#                     [ true ]*

# build-step.move-meta-entries = true
#                     Run process move-meta-entries
#                     [ false ]
#                     [ true ]*

# build-step.normalize-codeblock = true
#                     Run process normalize-codeblock
#                     [ false ]
#                     [ true ]*

# build-step.profile = false
#                     Run process profile
#                     [ false ]*
#                     [ true ]

# build-step.topic-profile = false
#                     Run process topic-profile
#                     [ false ]*
#                     [ true ]

# build-step.topicpull = true
#                     Run process topicpull
#                     [ false ]
#                     [ true ]*

# clean.temp = yes
#                     Specifies whether DITA-OT deletes the files in the temporary 
#                     directory after it finishes a build.
#                     [ no ]
#                     [ yes ]*

# conserve-memory = false
#                     Conserve memory at the expense of processing speed.
#                     [ false ]*
#                     [ true ]

# default.language = 
#                     Specifies the default language for source documents.

# dita.dir = 
#                     Specifies where DITA-OT is installed.

# dita.temp.dir = 
#                     Specifies the location of the temporary directory.

# filter-stage = early
#                     Specifies whether filtering is done before all other 
#                     processing, or after key and conref processing.
#                     [ early ]*
#                     [ late ]

# force-unique = false
#                     Generate copy-to attributes to duplicate topicref elements.
#                     [ false ]*
#                     [ true ]

# generate-debug-attributes = true
#                     Specifies whether the @xtrf and @xtrc debugging attributes 
#                     are generated in the temporary files.
#                     [ false ] - Disables generation of debugging attributes
#                     [ true ]* - Enables generation of debugging attributes

# generate.copy.outer = 1
#                     Adjust how output is generated for content that is located 
#                     outside the directory containing the input resource (DITA 
#                     map or topic).
#                     [ 1 ]* - Do not generate output for content that is located 
#                     outside the DITA map directory.
#                     [ 3 ] - Shift the output directory so that it contains all 
#                     output for the publication.

# link-crawl = topic
#                     Specifies whether to crawl only those topic links found in 
#                     maps, or all discovered topic links.
#                     [ map ]
#                     [ topic ]*

# onlytopic.in.map = false
#                     Specifies whether files that are linked to, or referenced 
#                     with a @conref attribute, generate output.
#                     [ false ]*
#                     [ true ]

# outer.control = warn
#                     Specifies whether to warn or fail if content is located 
#                     outside the directory containing the input resource (DITA 
#                     map or topic).
#                     [ fail ] - Fail quickly if files are going to be generated 
#                     or copied outside of the directory.
#                     [ quiet ] - Quietly finish without generating warnings or 
#                     errors.
#                     [ warn ]* - Complete the operation if files will be 
#                     generated or copied outside of the directory, but log a 
#                     warning.

# output.dir = 
#                     Specifies the name and location of the output directory.

# parallel = false
#                     Run processes in parallel when possible.
#                     [ false ]*
#                     [ true ]

# processing-mode = lax
#                     Specifies how DITA-OT handles errors and error recovery.
#                     [ lax ]* - When an error is encountered, DITA-OT attempts to 
#                     recover from it
#                     [ skip ] - When an error is encountered, DITA-OT continues 
#                     processing but does not attempt error recovery
#                     [ strict ] - When an error is encountered, DITA-OT stops 
#                     processing

# remove-broken-links = false
#                     Remove broken related links.
#                     [ false ]*
#                     [ true ]

# result.rewrite-rule.class = 
#                     Specifies the name of the Java class used to rewrite 
#                     filenames.

# result.rewrite-rule.xsl = 
#                     Specifies the name of the XSLT file used to rewrite 
#                     filenames.

# root-chunk-override = 
#                     Override for map chunk attribute value.

# store-type = file
#                     Temporary file store type.
#                     [ file ]*
#                     [ memory ]

# validate = true
#                     Specifies whether DITA-OT validates the content.
#                     [ false ]
#                     [ true ]*

# ============================================================================ #
#                                ECLIPSE HELP
# ============================================================================ #

# args.eclipse.provider = DITA
#                     Specifies the name of the person or organization that 
#                     provides the Eclipse help. Default value: DITA.

# args.eclipse.symbolic.name = org.sample.help.doc
#                     Specifies the symbolic name (aka plugin ID) in the output 
#                     for an Eclipse Help project. Default value: 
#                     org.sample.help.doc.

# args.eclipse.version = 0.0.0
#                     Specifies the version number to include in the output. 
#                     Default value: 0.0.0.

# args.eclipsehelp.country = 
#                     Specifies the region for the language that is specified by 
#                     the args.

# args.eclipsehelp.jar.name = 
#                     Specifies that the output should be zipped and returned 
#                     using this name.

# args.eclipsehelp.language = 
#                     Specifies the base language for translated content, such as 
#                     en for English.

# ============================================================================ #
#                              HTML-BASED OUTPUT
# ============================================================================ #

# args.artlbl = no
#                     Specifies whether to generate a label for each image; the 
#                     label will contain the image file name.
#                     [ no ]*
#                     [ yes ]

# args.copycss = no
#                     Specifies whether to copy the custom .css file to the output 
#                     directory.
#                     [ no ]*
#                     [ yes ]

# args.css = 
#                     Specifies the name of a custom .css file.

# args.csspath = 
#                     Specifies the location of a copied .css file relative to the 
#                     output directory.

# args.cssroot = 
#                     Specifies the directory that contains the custom .css file.

# args.dita.locale = 
#                     Specifies the language locale file to use for sorting index 
#                     entries.

# args.ftr = 
#                     Specifies an XML file that contains content for a running 
#                     footer.

# args.gen.default.meta = no
#                     Generate metadata for parental control scanners, meta 
#                     elements with name="security" and name="Robots".
#                     [ no ]*
#                     [ yes ]

# args.hdf = 
#                     Specifies an XML file that contains content to be placed in 
#                     the document head.

# args.hdr = 
#                     Specifies an XML file that contains content for a running 
#                     header.

# args.hide.parent.link = no
#                     Specifies whether to hide links to parent topics in the HTML 
#                     or XHTML output.
#                     [ no ]*
#                     [ yes ]

# args.indexshow = no
#                     Specifies whether the content of <indexterm> elements are 
#                     rendered in the output.
#                     [ no ]*
#                     [ yes ]

# args.outext = html
#                     Specifies the file extension for HTML or XHTML output. 
#                     Default value: html.

# args.xhtml.classattr = yes
#                     Specifies whether to include the DITA class ancestry inside 
#                     the XHTML elements.
#                     [ no ]
#                     [ yes ]*

# args.xsl = 
#                     Specifies a custom XSL file to be used instead of the 
#                     default XSL transformation.

# ============================================================================ #
#                                    HTML5
# ============================================================================ #

# args.artlbl = no
#                     Specifies whether to generate a label for each image; the 
#                     label will contain the image file name.
#                     [ no ]*
#                     [ yes ]

# args.copycss = no
#                     Specifies whether to copy the custom .css file to the output 
#                     directory.
#                     [ no ]*
#                     [ yes ]

# args.css = 
#                     Specifies the name of a custom .css file.

# args.csspath = 
#                     Specifies the location of a copied .css file relative to the 
#                     output directory.

# args.cssroot = 
#                     Specifies the directory that contains the custom .css file.

# args.dita.locale = 
#                     Specifies the language locale file to use for sorting index 
#                     entries.

# args.ftr = 
#                     Specifies an XML file that contains content for a running 
#                     footer.

# args.gen.default.meta = no
#                     Generate metadata for parental control scanners, meta 
#                     elements with name="security" and name="Robots".
#                     [ no ]*
#                     [ yes ]

# args.hdf = 
#                     Specifies an XML file that contains content to be placed in 
#                     the document head.

# args.hdr = 
#                     Specifies an XML file that contains content for a running 
#                     header.

# args.hide.parent.link = no
#                     Specifies whether to hide links to parent topics in the 
#                     HTML5 output.
#                     [ no ]*
#                     [ yes ]

# args.html5.classattr = yes
#                     Specifies whether to include the DITA class ancestry inside 
#                     the HTML5 elements.
#                     [ no ]
#                     [ yes ]*

# args.html5.contenttarget = contentwin
#                     Specifies the value of the @target attribute on the <base> 
#                     element in the TOC file. Default value: contentwin.

# args.html5.toc = index
#                     Specifies the base name of the TOC file. Default value: 
#                     index.

# args.html5.toc.class = 
#                     Specifies the value of the @class attribute on the <body> 
#                     element in the TOC file.

# args.html5.toc.xsl = 
#                     Specifies a custom XSL file to be used for TOC generation.

# args.indexshow = no
#                     Specifies whether the content of <indexterm> elements are 
#                     rendered in the output.
#                     [ no ]*
#                     [ yes ]

# args.outext = html
#                     Specifies the file extension for HTML5 output. Default 
#                     value: html.

# args.xsl = 
#                     Specifies a custom XSL file to be used instead of the 
#                     default XSL transformation.

# html5.toc.generate = yes
#                     Generate TOC file from the DITA map.
#                     [ no ]
#                     [ yes ]*

# nav-toc = none
#                     Specifies whether to generate a navigation TOC in topic 
#                     pages.
#                     [ full ] - Full TOC
#                     [ none ]* - No TOC
#                     [ partial ] - Partial TOC that shows the current topic

# ============================================================================ #
#                        MICROSOFT COMPILED HTML HELP
# ============================================================================ #

# args.htmlhelp.includefile = 
#                     Specifies the name of a file that you want included in the 
#                     HTML Help.

# ============================================================================ #
#                               NORMALIZED DITA
# ============================================================================ #

# normalize-strip-branch-filter = yes
#                     Remove branch filter artefacts after branch filter 
#                     resolution.
#                     [ no ]
#                     [ yes ]*

# normalize-strip-keyref = yes
#                     Remove key artefacts after key resolution.
#                     [ no ]
#                     [ yes ]*

# ============================================================================ #
#                                     PDF
# ============================================================================ #

# args.artlbl = no
#                     Specifies whether to generate a label for each image; the 
#                     label will contain the image file name.
#                     [ no ]*
#                     [ yes ]

# args.bookmap-order = discard
#                     Specifies if the frontmatter and backmatter content order is 
#                     retained in bookmap.
#                     [ discard ]*
#                     [ retain ]

# args.bookmark.style = EXPANDED
#                     Specifies whether PDF bookmarks are by default expanded or 
#                     collapsed.
#                     [ COLLAPSE ]
#                     [ EXPANDED ]

# args.chapter.layout = MINITOC
#                     Specifies whether chapter level TOCs are generated.
#                     [ BASIC ]
#                     [ MINITOC ]*

# args.fo.userconfig = 
#                     Specifies the user configuration file for FOP.

# args.xsl.pdf = 
#                     Specifies an XSL file that is used to override the default 
#                     XSL transformation.

# axf.cmd = 
#                     Specifies the path to the Antenna House Formatter 
#                     executable.

# axf.opt = 
#                     Specifies the user configuration file for Antenna House 
#                     Formatter.

# custom.xep.config = 
#                     Specifies the user configuration file for RenderX.

# customization.dir = 
#                     Specifies the customization directory.

# maxJavaMemory = 
#                     Specifies the amount of memory allocated to the RenderX 
#                     process.

# org.dita.pdf2.chunk.enabled = false
#                     Enables chunk attribute processing.
#                     [ false ]* - Disables chunk processing
#                     [ true ] - Enables chunk processing

# org.dita.pdf2.i18n.enabled = true
#                     Enables I18N font processing.
#                     [ false ] - Disables I18N processing
#                     [ true ]* - Enables I18N processing

# outputFile.base = 
#                     Specifies the base file name of the generated PDF file.

# pdf.formatter = fop
#                     Specifies the XSL processor.
#                     [ ah ] - Antenna House Formatter
#                     [ fop ]* - Apache FOP
#                     [ xep ] - RenderX XEP Engine

# publish.required.cleanup = yes
#                     Specifies whether draft-comment and required-cleanup 
#                     elements are included in the output.
#                     [ no ]
#                     [ yes ]

# xep.dir = 
#                     RenderX installation directory.

# ============================================================================ #
#                                    XHTML
# ============================================================================ #

# args.xhtml.contenttarget = contentwin
#                     Specifies the value of the @target attribute on the <base> 
#                     element in the TOC file. Default value: contentwin.

# args.xhtml.toc = index
#                     Specifies the base name of the TOC file. Default value: 
#                     index.

# args.xhtml.toc.class = 
#                     Specifies the value of the @class attribute on the <body> 
#                     element in the TOC file.

# args.xhtml.toc.xsl = 
#                     Specifies a custom XSL file to be used for TOC generation.