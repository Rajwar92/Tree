<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<!--  This file is part of the DITA Open Toolkit project. See the accompanying LICENSE file for applicable license.  -->
<task id="plugin-xsltparams">
  <title>Processing topics with XSLT in preprocess</title>
  <titlealts>
    <navtitle>Processing topics with XSLT</navtitle>
  </titlealts>
  <shortdesc>You can add an Ant target to the end of the pre-processing pipeline that transforms all topics. This is
    useful if you want to modify topics before transtype-specific processing, for example to modularize the code or
    reuse the same processing in multiple transformation types.</shortdesc>
  <taskbody>
    <steps>
      <step>
        <cmd>Create a plug-in descriptor file <filepath>plugin.xml</filepath> that imports a new Ant buildfile
            <filepath>build.xml</filepath> and adds an Ant target after pre-processing.</cmd>
        <stepxmp>
          <codeblock
            outputclass="language-xml normalize-space show-line-numbers show-whitespace"
          >&lt;?xml version="1.0" encoding="utf-8"?>
&lt;?xml-model href="https://www.dita-ot.org/rng/plugin.rnc" type="application/relax-ng-compact-syntax"?>
&lt;plugin id="plugin-id">
  &lt;feature extension="ant.import" file="build.xml"/>
  &lt;feature extension="depend.preprocess.post" value="uniform-decimals"/>
&lt;/plugin></codeblock>
        </stepxmp>
      </step>
      <step>
        <cmd>Create an Ant buildfile <filepath>build.xml</filepath> with a target to process all DITA topics in the
          temporary directory.</cmd>
        <stepxmp>
          <codeblock
            outputclass="language-xml normalize-space show-line-numbers show-whitespace"
          >&lt;?xml version="1.0" encoding="utf-8"?>
&lt;project>
  &lt;target name="uniform-decimals">
    &lt;pipeline taskname="xslt">
      &lt;xslt basedir="${dita.temp.dir}"
            style="${dita.plugin.plugin-id.dir}/filter.xsl">
        &lt;ditafileset format="dita" processingRole="normal"/>
      &lt;/xslt>
    &lt;/pipeline>
  &lt;/target>
&lt;/project></codeblock>
        </stepxmp>
      </step>
      <step>
        <cmd>Create an XSLT stylesheet <filepath>filter.xsl</filepath> to filter topic content.</cmd>
        <stepxmp>
          <codeblock
            outputclass="language-xml normalize-space show-line-numbers show-whitespace"
          >&lt;?xml version="1.0" encoding="utf-8"?>
&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="xs">

  &lt;!-- Format keywords with a decimal number with at least two decimal points -->
  &lt;xsl:template match="*[contains(@class, ' topic/keyword ')]">
    &lt;xsl:copy>
      &lt;xsl:apply-templates select="@*"/>
      &lt;xsl:variable name="num" select="number(.)" as="xs:double"/>
      &lt;xsl:choose>
        &lt;xsl:when test="$num = $num and contains(., '.')">
          &lt;xsl:attribute name="orig" select="."/>
          &lt;xsl:value-of select="format-number($num, '0.00#')"/>
        &lt;/xsl:when>
        &lt;xsl:otherwise>
          &lt;xsl:apply-templates select="node()"/>
        &lt;/xsl:otherwise>
      &lt;/xsl:choose>
    &lt;/xsl:copy>
  &lt;/xsl:template>

  &lt;!-- Identity template -->
  &lt;xsl:template match="@* | node()">
    &lt;xsl:copy>
      &lt;xsl:apply-templates select="@* | node()"/>
    &lt;/xsl:copy>
  &lt;/xsl:template>

&lt;/xsl:stylesheet></codeblock>
        </stepxmp>
      </step>
      <step conkeyref="conref-task/install-plugin">
        <cmd/>
      </step>
    </steps>
    <result>The <filepath>filter.xsl</filepath> stylesheet will transform every DITA topic after pre-processing.
    </result>
  </taskbody>
</task>
